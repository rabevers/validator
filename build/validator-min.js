var Gp=window.Gp||{};Gp.Validator=function(){function _parseValidatorString(validatorString){return validatorString.split(validatorStringSplitCharacter)}function _parseValidatorArgumentString(validatorArgumentString){for(var arr=validatorArgumentString.split(";"),parsedData=[],i=0;i<arr.length;i++){var keyValueArray=arr[i].split("=");parsedData[keyValueArray[0]]=keyValueArray[1]}return parsedData}function _callCustomValidator(path){return[window].concat(path.split(".")).reduce(function(prev,curr){return prev[curr]})}function _setupValidation(element,trigger,validatorString){var validatorArray=_parseValidatorString(validatorString);element=$(element),element.bind(trigger,function(){for(var argumentObject={},i=0;i<validatorArray.length;i++){validatorParts=validatorArray[i].split(":"),validatorParts[1]&&(argumentObject=_parseValidatorArgumentString(validatorParts[1]));var result;if(_callCustomValidator(validatorParts[0])&&"function"==typeof _callCustomValidator(validatorParts[0]).validate)result=_callCustomValidator(validatorParts[0]).validate(element,argumentObject);else{if(!Gp.Validators[validatorParts[0]])throw new Error("Validator "+validatorParts[0]+" not found.");result=Gp.Validators[validatorParts[0]].validate(element,argumentObject)}var callback=element.data("validator-callback");if("function"!=typeof window[callback])throw new Error("The defined callback method is not a function");window[callback](element,result)}})}var validatorParts,validatorStringSplitCharacter="&";return{validate:function(className,containerId){var containerString="";containerId&&(containerString="#"+containerId+" "),$(containerString+"."+className).each(function(index,element){if("form"==element.tagName);else{var triggers=$(element).data("validator-trigger");if(!triggers)throw new Error("No trigger for element validation, without a trigger validation will not occur.");triggers=triggers.split(",");var validationInformation=$(element).data("validator");if(!validationInformation)throw new Error("No validation information found. Either the data-validator tag is missing or an incorrect class was assigned to this element");for(var x=0;x<triggers.length;x++)_setupValidation(element,triggers[x].trim(),validationInformation)}})},configure:function(configurationObject){return configurationObject.validatorSplitter&&(validatorStringSplitCharacter=configurationObject.validatorSplitter),this}}}(),Gp.Validators={required:{messages:{notValid:"The field is required, a value must be entered"},validate:function(element){var value=element.val();return value.length>0?{isValid:!0}:{isValid:!1,validator:"required",messages:{inValid:this.messages.notValid}}}},length:{messages:{tooShort:"The value is too short",tooLong:"The value is too long"},validate:function(element,settings){var returnObject={},value=element.val();return settings.minLength&&value.length<settings.minLength&&(returnObject.tooShort=this.messages.tooShort),settings.maxLength&&value.length>settings.maxLength&&(returnObject.tooLong=this.messages.tooLong),Object.keys(returnObject).length>0?{isValid:!1,validator:"length",messages:returnObject}:{isValid:!0,validator:"length"}}},regexp:{messages:{notValid:"Value doesn't match pattern"},validate:function(element,settings){var pattern=new RegExp(settings.regexp),value=element.val();return pattern.test(value)===!0?{isValid:!0,validator:"regexp"}:{isValid:!1,validator:"regexp",messages:{inValid:this.messages.notvalid}}}}};